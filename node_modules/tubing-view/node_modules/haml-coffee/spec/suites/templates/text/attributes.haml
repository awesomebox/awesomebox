%input#space-end(type='hidden' value="3" )
%input#space-start( type="hidden" value='3' )
%input#space-middle(type="hidden"  value="3")

%input#space-end{:type => "hidden", :value => '3' }
%input#space-start{ :type => 'hidden', :value => "3" }
%input#space-middle{:type => "hidden",  :value => "3"}

%input{:checked=>  0}
%input{:checked   => ""}

%input(checked=  0)
%input(checked  = "")

%input{ name: 'name' }
%a{"data-attr": 'value'}

%li{'x': 'y' }= this.x
- something = false

%meta(http-equiv="content-type" content="text/html; charset=UTF-8")
%meta(http-equiv='content-type' content='text/html; charset=UTF-8')

%label{:for => 'gods_sake'} It should not fail (with parenthesis)

%html{:xmlns => "http://www.w3.org/1999/xhtml", "xml:lang" => "en", :lang => "en"}
%html{:xmlns => "http://www.w3.org/1999/xhtml", 'xml:lang' => "en", :lang => "en"}

%html{ xmlns: "http://www.w3.org/1999/xhtml", "xml:lang": "en", lang: "en"}
%html{ xmlns: "http://www.w3.org/1999/xhtml", 'xml:lang': "en", lang: "en"}

%a{ data: { 'user-role': 'admin' } } Delete
%a{ data: { "user-role": 'admin' } } Delete

%a{ :data => { 'user-role' => 'admin' } } Delete
%a{ :data => { "user-role" => 'admin' } } Delete

%a{ :data => { :'user-role' => 'admin' } } Delete
%a{ :data => { :"user-role" => 'admin' } } Delete

%input#space-end{:type => "hidden", value: '3' }
%input#space-start{ type: 'hidden', :value => "3" }

.share-notebook{ title: 'bar',
  bar: 'foo' }

.share-notebook{ :title => 'bar',
  :bar => 'foo' }

%label.g-label{:for => 'input-transfer-template-repeat-number'} Время:
%input#input-transfer-template-repeat-number.g-field{:type => 'text', :name => 'transfer_template[repeat_number]', :placeholder => 'например, 14:50'}

%span.value{ 'foo' : 'foo', 'bar' : 'bar', baz: 'baz' } Foo
%span.value{ 'foo': 'foo', 'bar' : 'bar', baz: 'baz' } Foo
%span.value{ data: { 'foo' : 'foo', 'bar': 'bar' } } Foo

%tbody.build-row{data-bind: "foreach: { data: xs}"}

%object{ type: 'image/svg+xml', data: 'some.svg' }
%object{ :type => "image/svg+xml", :data => "some.svg" }
%object(type="image/svg+xml" data="some.svg")
%object{ data: 'some.svg', type: 'image/svg+xml' }
%object{ :data => "some.svg", :type => "image/svg+xml" }
%object(data="some.svg" type="image/svg+xml")

%input{type: 'checkbox'} Some text:
%input{type: 'checkbox'}
Some text:
