{
  "name": "whiskers",
  "description": "A mustachioed templating library",
  "version": "0.3.1",
  "author": {
    "name": "Gabriel Farrell",
    "email": "g@grrawr.com"
  },
  "contributors": [
    {
      "name": "Ernesto MÃ©ndez",
      "email": "der@der-design.com"
    },
    {
      "name": "Thomas Hunter",
      "email": "me@thomashunter.name"
    },
    {
      "name": "Ryan Lee",
      "email": "rlee@edits.net"
    }
  ],
  "engines": {
    "node": ">=0.4.0"
  },
  "main": "lib/whiskers",
  "repository": {
    "type": "git",
    "url": "http://github.com/gsf/whiskers.js.git"
  },
  "scripts": {
    "test": "find test/server/test-*.js | xargs -n 1 -t node",
    "posttest": "node minify.js"
  },
  "devDependencies": {
    "express": "3.x",
    "uglify-js": ">=1.1.1"
  },
  "readme": "Whiskers.js\n===========\n\nAbout\n-----\n\nWhiskers is focused on template readability. By limiting template logic, \ncareful preparation of the context is encouraged, and the processing and \nformatting of data is kept separate from the design of the display.\n\nAt around 100 lines, Whiskers.js may be the smallest mustachioed templating \nsystem. It also compiles and caches for quick execution. Take a look at the \nwell-documented [code][]!\n\n[code]: https://github.com/gsf/whiskers.js/blob/master/lib/whiskers.js\n\n\nInstallation\n------------\n\nFor the browser, drop the minified version at `dist/whiskers.min.js` in your\nscripts directory (or source it directly from GitHub at \n<http://gsf.github.com/whiskers.js/whiskers.min.js>).\n\nFor node, `npm install whiskers`.\n\nFor use in [Express][], see `test/server/test-express.js`.\n\n[express]: http://expressjs.com/\n\n\nTests\n-----\n\nFor the browser, visit `test/browser/index.html`.\n\nFor node, `npm test`.\n\n\nExample\n-------\n\nTemplates are rendered as follows, where \"template\" is a string and \"context\"\nis an object:\n\n    var rendered = whiskers.render(template, context);\n\nA template might look something like this:\n\n    <article>\n      <header>\n        {>header}\n      </header>\n      {if tags}\n        <ul id=\"tags\">\n          {for tag in tags}\n          <li>{tag}</li>\n          {/for}\n        </ul>\n      {else}\n        <p>No tags!</p>\n      {/if}\n      <div>{content}</div>\n      {!<p>this paragraph is \n        commented out</p>!}\n    </article>\n\nWith the following context:\n\n    {\n      header: '<h1>{title}</h1>\\n<p id=\"by\">{author}</p>',\n      title: 'My life',\n      author: 'Bars Thorman',\n      tags: [\n        'real',\n        'vivid'\n      ],\n      content: 'I grew up into a fine willow.'\n    }\n\nIt would be rendered as this:\n\n    <article>\n      <header>\n        <h1>My life</h1>\n        <p id=\"by\">Bars Thorman</p>\n      </header>\n      <ul id=\"tags\">\n        <li>real</li>\n        <li>vivid</li>\n      </ul>\n      <div>I grew up into a fine willow.</div>\n    </article>\n\n\nUsage\n-----\n\nWhiskers keeps templates readable by limiting tags to variables, statements \n(\"for\", \"if\", and \"else\"), partials, and comments.\n\nVariable tags retrieve data from the context.  They may use dot notation:\n\n    {object.variable}\n\nA \"for\" tag loops over variables in an array:\n\n    {for variable in array}\n      <p>{variable}</p>\n    {/for}\n\nAn \"if\" tag only displays a section of the template for a truthy variable, or\nthe inverse:\n\n    {if variable}\n      <p>{variable}</p>\n    {/if}\n    {if not variable}\n      <p>No variable!</p>\n    {/if}\n\nAs you can see, \"for\" and \"if\" sections are closed by a corresponding tag with\na leading slash. The previous example could also be shortened:\n\n    {if variable}\n      <p>{variable}</p>\n    {else}\n      <p>No variable!</p>\n    {/if}\n\nThe \"else\" tag can also be used with \"for\" to display something when the array\nis empty:\n\n    {for variable in array}\n      <p>{variable}</p>\n    {else}\n      <p>Nothing in the array!</p>\n    {/for}\n\nA partial tag begins with a greater-than sign.  It renders any template\nassigned to that variable with the current context:\n\n    <div>{>partial}</div>\n\nComment tags comment out part of the template.  They begin and end with \nexclamation points. They can include newlines, spaces, and other tags.\n\n    <p>{!these words and this {tag} \n      will not be rendered!}</p>\n\nAny tag is escaped from rendering by prepending a backslash:\n\n    \\{variable}\n\nSee the test directory for server and browser usage examples.\n\n\nForebears\n---------\n\nWhiskers is influenced by these fine projects:\n\n* <http://github.com/janl/mustache.js>\n* <http://github.com/akdubya/dustjs>\n* <http://code.google.com/p/json-template/>\n* <http://docs.djangoproject.com/en/dev/ref/templates/>\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gsf/whiskers.js/issues"
  },
  "_id": "whiskers@0.3.1",
  "dist": {
    "shasum": "37c1c37225850c38ed405b04b58228e3fdb577a4"
  },
  "_from": "whiskers@",
  "_resolved": "https://registry.npmjs.org/whiskers/-/whiskers-0.3.1.tgz"
}
